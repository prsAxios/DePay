"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/tag.ts
var tag_exports = {};
__export(tag_exports, {
  Tag: () => Tag,
  isTypedArrayTag: () => isTypedArrayTag
});
module.exports = __toCommonJS(tag_exports);
var Tag = /* @__PURE__ */ ((Tag2) => {
  Tag2["String"] = "$";
  Tag2["Date"] = "D";
  Tag2["BigInt"] = "n";
  Tag2["FormData"] = "K";
  Tag2["Promise"] = "@";
  Tag2["Symbol"] = "S";
  Tag2["Set"] = "W";
  Tag2["Map"] = "Q";
  Tag2["Undefined"] = "undefined";
  Tag2["Infinity_"] = "Infinity";
  Tag2["NegativeInfinity"] = "-Infinity";
  Tag2["NegativeZero"] = "-0";
  Tag2["NaN_"] = "NaN";
  Tag2["File"] = "k";
  Tag2["AsyncIterator"] = "#";
  Tag2["ArrayBuffer"] = "A";
  Tag2["Int8Array"] = "C";
  Tag2["Uint8Array"] = "c";
  Tag2["Uint8ClampedArray"] = "U";
  Tag2["Int16Array"] = "P";
  Tag2["Uint16Array"] = "p";
  Tag2["Int32Array"] = "L";
  Tag2["Uint32Array"] = "l";
  Tag2["Float32Array"] = "F";
  Tag2["Float64Array"] = "d";
  Tag2["BigInt64Array"] = "N";
  Tag2["BigUint64Array"] = "m";
  Tag2["DataView"] = "V";
  return Tag2;
})(Tag || {});
var TYPED_ARRAY_TAGS = [
  "A" /* ArrayBuffer */,
  "C" /* Int8Array */,
  "c" /* Uint8Array */,
  "U" /* Uint8ClampedArray */,
  "P" /* Int16Array */,
  "p" /* Uint16Array */,
  "L" /* Int32Array */,
  "l" /* Uint32Array */,
  "F" /* Float32Array */,
  "d" /* Float64Array */,
  "N" /* BigInt64Array */,
  "m" /* BigUint64Array */,
  "V" /* DataView */
];
function isTypedArrayTag(tag) {
  return TYPED_ARRAY_TAGS.includes(tag);
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  Tag,
  isTypedArrayTag
});
//# sourceMappingURL=tag.cjs.map