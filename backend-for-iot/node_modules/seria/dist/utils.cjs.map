{"version":3,"sources":["../src/utils.ts"],"sourcesContent":["// https://github.com/sindresorhus/is-plain-obj/blob/main/index.js\r\nexport function isPlainObject(value: unknown) {\r\n  if (typeof value !== \"object\" || value === null) {\r\n    return false;\r\n  }\r\n\r\n  const prototype = Object.getPrototypeOf(value);\r\n  return (\r\n    (prototype === null ||\r\n      prototype === Object.prototype ||\r\n      Object.getPrototypeOf(prototype) === null) &&\r\n    !(Symbol.toStringTag in value) &&\r\n    !(Symbol.iterator in value)\r\n  );\r\n}\r\n\r\nexport function bufferToBase64(buffer: ArrayBuffer) {\r\n  let binary = \"\";\r\n  const bytes = new Uint8Array(buffer);\r\n  for (let i = 0; i < bytes.byteLength; i++) {\r\n    binary += String.fromCharCode(bytes[i]);\r\n  }\r\n\r\n  return btoa(binary);\r\n}\r\n\r\ninterface TypedArrayLike extends ArrayBufferView {\r\n  [index: number]: number;\r\n}\r\n\r\nexport function base64ToBuffer<T extends TypedArrayLike>(\r\n  base64String: string,\r\n  Constructor: new (buffer: ArrayBuffer) => T\r\n): T {\r\n  const binaryString = atob(base64String);\r\n  const bytes = new Uint8Array(binaryString.length);\r\n\r\n  for (let i = 0; i < binaryString.length; i++) {\r\n    bytes[i] = binaryString.charCodeAt(i);\r\n  }\r\n\r\n  return new Constructor(bytes.buffer);\r\n}\r\n\r\nexport const delay = (ms: number) =>\r\n  new Promise<void>((resolve) => setTimeout(resolve, ms));\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACO,SAAS,cAAc,OAAgB;AAC5C,MAAI,OAAO,UAAU,YAAY,UAAU,MAAM;AAC/C,WAAO;AAAA,EACT;AAEA,QAAM,YAAY,OAAO,eAAe,KAAK;AAC7C,UACG,cAAc,QACb,cAAc,OAAO,aACrB,OAAO,eAAe,SAAS,MAAM,SACvC,EAAE,OAAO,eAAe,UACxB,EAAE,OAAO,YAAY;AAEzB;AAEO,SAAS,eAAe,QAAqB;AAClD,MAAI,SAAS;AACb,QAAM,QAAQ,IAAI,WAAW,MAAM;AACnC,WAAS,IAAI,GAAG,IAAI,MAAM,YAAY,KAAK;AACzC,cAAU,OAAO,aAAa,MAAM,CAAC,CAAC;AAAA,EACxC;AAEA,SAAO,KAAK,MAAM;AACpB;AAMO,SAAS,eACd,cACA,aACG;AACH,QAAM,eAAe,KAAK,YAAY;AACtC,QAAM,QAAQ,IAAI,WAAW,aAAa,MAAM;AAEhD,WAAS,IAAI,GAAG,IAAI,aAAa,QAAQ,KAAK;AAC5C,UAAM,CAAC,IAAI,aAAa,WAAW,CAAC;AAAA,EACtC;AAEA,SAAO,IAAI,YAAY,MAAM,MAAM;AACrC;AAEO,IAAM,QAAQ,CAAC,OACpB,IAAI,QAAc,CAAC,YAAY,WAAW,SAAS,EAAE,CAAC;","names":[]}